swagger: '2.0'
info:
  version: '0.1'
  title: wazo-auth
  description: "Wazo's authentication service"
  contact:
    name: Wazo dev team
    url: http://wazo.community
    email: dev@wazo.community
  license:
    name: GPLv3
    url: http://www.gnu.org/licenses/gpl-3.0.html
x-xivo-port: 9497
x-xivo-name: auth
basePath: /0.1
schemes:
- https
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  wazo_auth_basic:
    type: basic
  wazo_auth_token:
    type: apiKey
    name: X-Auth-Token
    in: header
paths:
  /tenants:
    get:
      tags:
        - tenants
      security:
        - wazo_auth_token: []
      description: '**Required ACL**: `auth.tenants.read`'
      summary: 'Retrieves the list of tenants'
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: 'The list of tenant'
          schema:
            $ref: '#/definitions/TenantList'
    post:
      consumes:
      - application/json
      produces:
      - application/json
      summary: Creates a new tenant
      description: '**Required ACL:** `auth.tenants.create'
      operationId: createTenant
      tags:
      - tenants
      security:
      - wazo_auth_token: []
      parameters:
        - name: body
          in: body
          description: The tenant creation parameters
          required: true
          schema:
            $ref: '#/definitions/TenantCreate'
      responses:
        '200':
          description: The new tenant
          schema:
            $ref: '#/definitions/TenantPostResponse'
        '400':
          description: Invalid body
          schema:
            $ref: '#/definitions/APIError'
  /tenants/{tenant_uuid}:
    delete:
      operationId: delete_tenant
      tags:
        - tenants
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.tenants.{tenant_uuid}.delete`'
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      summary: Delete a tenant
      responses:
        '204':
          description: The tenant has been removed
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Tenant not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - tenants
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.tenants.{tenant_uuid}.read`'
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      summary: Retrieves the details of a tenant
      responses:
        '200':
          description: "The tenant's data"
          schema:
            $ref: '#/definitions/TenantResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Tenant not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
  /tenants/{tenant_uuid}/users:
    get:
      tags:
        - tenants
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.tenants.{tenant_uuid}.users.read`'
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/tenant_uuid'
      summary: Retrieves the details of a tenant
      responses:
        '200':
          description: "The tenant's data"
          schema:
            $ref: '#/definitions/UserList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Tenant not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
  /tenants/{tenant_uuid}/users/{user_uuid}:
    put:
      tags:
        - users
        - tenants
      security:
        - wazo_auth_token: []
      operationId: addUserTenant
      description: '**Required ACL:** `auth.tenants.{tenant_uuid}.users.{user_uuid}.create`'
      summary: Associate a user to a tenant
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      - $ref: '#/parameters/user_uuid'
      responses:
        '204':
          description: Association successful
        '404':
          description: User or Tenant not found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - users
        - tenants
      security:
        - wazo_auth_token: []
      operationId: removeUserTenant
      description: '**Required ACL:** `auth.tenants.{tenant_uuid}.users.{user_uuid}.delete`'
      summary: Dissociate a tenant and a user
      parameters:
      - $ref: '#/parameters/tenant_uuid'
      - $ref: '#/parameters/user_uuid'
      responses:
        '204':
          description: The association has been removed
        '404':
          description: User or Tenant not found
          schema:
            $ref: '#/definitions/Error'
  /users/{user_uuid}/groups:
    get:
      tags:
        - users
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.users.{user_uuid}.groups.read`'
      parameters:
      - $ref: '#/parameters/user_uuid'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      summary: Retrieves the list of groups associated to a user
      responses:
        '200':
          description: "The groups of the user"
          schema:
            $ref: '#/definitions/GetGroupsResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
  /users/{user_uuid}/tenants:
    get:
      tags:
        - users
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.users.{user_uuid}.tenants.read`'
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      - $ref: '#/parameters/user_uuid'
      summary: Retrieves the details of a user
      responses:
        '200':
          description: "The user's tenant list"
          schema:
            $ref: '#/definitions/TenantList'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
  /users/{user_uuid}/policies:
    get:
      tags:
        - users
        - policies
      security:
      - wazo_auth_token: []
      description: '**Required ACL**: `auth.users.{user_uuid}.policies.read`'
      parameters:
      - $ref: '#/parameters/user_uuid'
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      summary: Retrieves the list of policies associated to a user
      responses:
        '200':
          description: "The user's policies"
          schema:
            $ref: '#/definitions/GetPoliciesResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
  /users/{user_uuid}/policies/{policy_uuid}:
    put:
      tags:
        - users
        - policies
      security:
        - wazo_auth_token: []
      operationId: addUserPolicy
      description: '**Required ACL:** `auth.users.{user_uuid}.policies.{policy_uuid}.create`'
      summary: Associate a policy to a user
      parameters:
      - $ref: '#/parameters/policy_uuid'
      - $ref: '#/parameters/user_uuid'
      responses:
        '204':
          description: The policy has been assigned
        '404':
          description: User or Policy not found
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - users
        - policies
      security:
        - wazo_auth_token: []
      operationId: removeUserPolicy
      description: '**Required ACL:** `auth.users.{user_uuid}.policies.{policy_uuid}.delete`'
      summary: Dissociate a policy from a user
      parameters:
      - $ref: '#/parameters/policy_uuid'
      - $ref: '#/parameters/user_uuid'
      responses:
        '204':
          description: The policy has been unassigned
        '404':
          description: User or Policy not found
          schema:
            $ref: '#/definitions/Error'
parameters:
  direction:
    required: false
    name: direction
    in: query
    type: string
    enum:
    - asc
    - desc
    description: Sort list of items in 'asc' (ascending) or 'desc' (descending) order
  group_uuid:
    name: group_uuid
    in: path
    type: string
    description: The UUID of the group
    required: true
  limit:
    name: limit
    in: query
    type: integer
    description: The limit defines the number of individual objects that are returned
    required: false
  offset:
    name: offset
    in: query
    type: integer
    description: The offset defines the offsets the start by the number specified
    default: 0
    required: false
  order:
    required: false
    name: order
    in: query
    type: string
    description: Name of the field to use for sorting the list of items returned.
  policy_uuid:
    name: policy_uuid
    in: path
    type: string
    description: The UUID of the policy
    required: true
  tenant_uuid:
    name: tenant_uuid
    in: path
    type: string
    description: The UUID of the tenant
    required: true
  user_uuid:
    name: user_uuid
    in: path
    type: string
    description: The UUID of the user
    required: true
  search:
    required: false
    name: search
    in: query
    type: string
    description: Search term for filtering a list of items. Only items with a field
      containing the search term will be returned.
definitions:
  APIError:
    type: object
    properties:
      timestamp:
        type: number
      message:
        type: string
      resource:
        type: string
      details:
        type: object
  TenantPostResponse:
    type: object
    properties:
      name:
        type: string
      uuid:
        type: string
  UserEmail:
    type: object
    properties:
      address:
        type: string
      main:
        type: boolean
      confirmed:
        type: boolean
  UserPostResponse:
    type: object
    properties:
      username:
        type: string
      emails:
        type: array
        items:
          $ref: '#/definitions/UserEmail'
      uuid:
        type: string
  TenantList:
    type: object
    properties:
      total:
        type: integer
        description: The number of tenants
      filtered:
        type: integer
        description: The number of tenants matching the searched term
      items:
        type: array
        items:
          $ref: '#/definitions/TenantResult'
        description: A paginated list of tenants
  UserList:
    type: object
    properties:
      total:
        type: integer
        description: The number of users
      filtered:
        type: integer
        description: The number of users matching the searched term
      items:
        type: array
        items:
          $ref: '#/definitions/UserResult'
        description: A paginated list of users
  TenantResult:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
  UserResult:
    type: object
    properties:
      uuid:
        type: string
      username:
        type: string
      main_email_address:
        type: string
  TenantCreate:
    type: object
    properties:
      name:
        type: string
        description: "The tenant's name"
    required:
      - name
  Error:
    type: object
    properties:
      reason:
        type: array
        items:
          type: string
      timestamp:
        type: array
        items:
          type: string
      status_code:
        type: integer
