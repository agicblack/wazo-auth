swagger: '2.0'
info:
  version: '0.1'
  title: Wazo Auth
  description: Wazo's authentication service
  contact:
    name: Wazo dev team
    url: http://wazo.community
    email: dev.wazo@gmail.com
  license:
    name: GPLv3
    url: http://www.gnu.org/licenses/gpl-3.0.html
x-xivo-port: 9497
x-xivo-name: auth
basePath: /0.1
schemes:
- https
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  xivo_auth_basic:
    type: basic
  xivo_auth_token:
    type: apiKey
    name: X-Auth-Token
    in: header
paths:
  /policies:
    get:
      security:
        - xivo_auth_token: []
      produces:
        - application/json
      summary: List ACL policies
      description: '**Required ACL:** `auth.policies.read`'
      operationId: listPolicies
      tags:
        - policies
      parameters:
      - $ref: '#/parameters/order'
      - $ref: '#/parameters/direction'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
      - $ref: '#/parameters/search'
      responses:
        '200':
          description: A list of policies
          schema:
            $ref: '#/definitions/GetPoliciesResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
    post:
      security:
        - xivo_auth_token: []
      consumes:
        - application/json
      produces:
        - application/json
      summary: Create a new ACL policy
      description: '**Required ACL:** `auth.policies.create`

        Create a new ACL policy set that can be associated to a user, an administrator, a service or a backend.
        An ACL policy is a list of ACL or ACL templates that is used to create a token'
      operationId: createPolicies
      tags:
        - policies
      parameters:
      - name: body
        in: body
        description: The policy creation parameters
        required: true
        schema:
          $ref: '#/definitions/Policy'
          required:
            - name
      responses:
        '200':
          description: The created policy's data
          schema:
            $ref: '#/definitions/PolicyResult'
        '401':
          description: Invalid data has been supplied'
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate Policy
          schema:
            $ref: '#/definitions/Error'
  /policies/{policy_uuid}:
    get:
      tags:
        - policies
      security:
      - xivo_auth_token: []
      description: '**Required ACL**: `auth.policies.{policy_uuid}.read'
      parameters:
      - name: policy_uuid
        in: path
        type: string
        description: The UUID of the policy
        required: true
      summary: Retrieves the details of a policy
      responses:
        '200':
          description: The policy's data
          schema:
            $ref: '#/definitions/PolicyResult'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Policy not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
    delete:
      operationId: delete_policy
      tags:
        - policies
      security:
      - xivo_auth_token: []
      description: '**Required ACL**: `auth.policies.{policy_uuid}.delete`'
      parameters:
      - name: policy_uuid
        in: path
        type: string
        description: The UUID of the policy
        required: true
      summary: Delete a policy
      responses:
        '204':
          description: The policy has been removed
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Policy not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related error
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - xivo_auth_token: []
      consumes:
        - application/json
      produces:
        - application/json
      summary: Modify an ACL policy
      description: '**Required ACL:** `auth.policies.{policy_uuid}.edit`'
      operationId: editPolicies
      tags:
        - policies
      parameters:
      - name: policy_uuid
        in: path
        type: string
        description: The UUID of the policy
        required: true
      - name: body
        in: body
        description: The policy edition parameters
        required: true
        schema:
          $ref: '#/definitions/Policy'
      responses:
        '200':
          description: The modified policy's data
          schema:
            $ref: '#/definitions/PolicyResult'
        '401':
          description: Invalid data has been supplied'
          schema:
            $ref: '#/definitions/Error'
        '409':
          description: Duplicate Policy
          schema:
            $ref: '#/definitions/Error'
  /policies/{policy_uuid}/acl_templates/{acl_template}:
    delete:
      security:
        - xivo_auth_token: []
      operationId: deletePolicyACLTemplate
      tags:
        - policies
      description: '**Required ACL:** `auth.policies.{policy_uuid}.edit`'
      summary: Dissociate an ACL template from a policy
      parameters:
      - name: policy_uuid
        in: path
        type: string
        description: The UUID of the policy
        required: true
      - name: acl_template
        in: path
        type: string
        description: The ACL template to removed
        required: true
      responses:
        '204':
          description: The policy has been modified
        '404':
          description: Policy or ACL template not found
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - xivo_auth_token: []
      operationId: addPolicyACLTemplate
      tags:
        - policies
      description: '**Required ACL:** `auth.policies.{policy_uuid}.edit`'
      summary: Associate an ACL template to a policy
      parameters:
      - name: policy_uuid
        in: path
        type: string
        description: The UUID of the policy
        required: true
      - name: acl_template
        in: path
        type: string
        description: The ACL template to add
        required: true
      responses:
        '204':
          description: The policy has been modified
        '404':
          description: Policy not found
          schema:
            $ref: '#/definitions/Error'
  /token:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      summary: Creates a token
      description: 'Creates a valid token for the supplied username and password combination
        using the specified backend. The stock backends are: ``xivo_user``, ``xivo_service``,
        ``xivo_admin``, ``ldap_user``. For more details about the backends, see http://documentation.wazo.community/en/latest/system/xivo-auth/stock_plugins.html#backends-plugins'
      operationId: createToken
      tags:
      - token
      security:
      - xivo_auth_basic: []
      parameters:
      - name: body
        in: body
        description: The token creation parameters
        required: true
        schema:
          type: object
          properties:
            backend:
              type: string
            expiration:
              type: integer
          required:
          - backend
      responses:
        '200':
          description: The created token's data
          schema:
            $ref: '#/definitions/Token'
        '400':
          description: Invalid expiration
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related token generation error
          schema:
            $ref: '#/definitions/Error'
  /token/{token}:
    get:
      tags:
      - token
      security:
      - {}
      parameters:
      - name: token
        in: path
        type: string
        description: The token to query
        required: true
      - name: scope
        in: query
        type: string
        description: The required ACL
        required: false
      summary: Retrieves token data
      responses:
        '200':
          description: The token's data
          schema:
            $ref: '#/definitions/Token'
        '403':
          description: This token cannot acces the required ACL
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Token not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related token error
          schema:
            $ref: '#/definitions/Error'
    head:
      tags:
      - token
      security:
      - {}
      parameters:
      - name: token
        in: path
        type: string
        description: The token to query
        required: true
      - name: scope
        in: query
        type: string
        description: The required ACL
        required: false
      summary: Checks if a token is valid
      responses:
        '204':
          description: No data
        '403':
          description: This token cannot acces the required ACL
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Token not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: System related token error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - token
      security:
      - {}
      parameters:
      - name: token
        in: path
        type: string
        description: The token to query
        required: true
      summary: Revoke a token
      responses:
        '200':
          description: Success message
        '500':
          description: System related token error
          schema:
            $ref: '#/definitions/Error'
  /backends:
    get:
      tags:
      - backends
      security:
      - {}
      description: Retrieves the list of activated backends
      responses:
        '200':
          description: The list of activated backends
          schema:
            $ref: '#/definitions/BackendList'
parameters:
  direction:
    required: false
    name: direction
    in: query
    type: string
    enum:
    - asc
    - desc
    description: Sort list of items in 'asc' (ascending) or 'desc' (descending) order
  limit:
    name: limit
    in: query
    type: integer
    description: The limit defines the number of individual objects that are returned
    required: false
  offset:
    name: offset
    in: query
    type: integer
    description: The offset defines the offsets the start by the number specified
    default: 0
    required: false
  order:
    required: false
    name: order
    in: query
    type: string
    description: Name of the field to use for sorting the list of items returned.
  search:
    required: false
    name: search
    in: query
    type: string
    description: Search term for filtering a list of items. Only items with a field
      containing the search term will be returned.
definitions:
  BackendList:
    type: object
    properties:
      data:
        type: array
        items:
          type: string
  Policy:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      acl_templates:
        type: array
        items:
          type: string
  PolicyResult:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      acl_templates:
        type: array
        items:
          type: string
    required:
    - uuid
    - name
    - description
    - acl_templates
  GetPoliciesResult:
    type: object
    properties:
      total:
        type: integer
        description: The number of policies matching the searched term
      items:
        type: array
        items:
          $ref: '#/definitions/PolicyResult'
        description: A paginated list of policies
    required:
    - total
    - items
  Token:
    type: object
    properties:
      data:
        type: object
        properties:
          token:
            type: string
          expires_at:
            type: string
          utc_expires_at:
            type: string
          issued_at:
            type: string
          utc_issued_at:
            type: string
          auth_id:
            type: string
            description: The unique identifier retrieved from the backend
          xivo_user_uuid:
            type: string
            description: The UUID of the XiVO user matching these credentials, this
              field can be None
          xivo_uuid:
            type: string
          acls:
            type: array
            items:
              type: string
            description: The list of allowed ACLs for this token
  Error:
    type: object
    properties:
      reason:
        type: array
        items:
          type: string
      timestamp:
        type: array
        items:
          type: string
      status_code:
        type: integer
